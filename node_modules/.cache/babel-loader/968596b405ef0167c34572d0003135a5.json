{"ast":null,"code":"import _classCallCheck from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/TTN/merp_react_web_dev/src/admin/organization/file_attachments/AddFileFolder.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport queryString from 'query-string';\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport { BrowserRouter as Router, NavLink, Switch, Link, Route, HashRouter } from 'react-router-dom';\nvar options = [];\nvar seleted_ids = [];\n\nvar AddFileFolder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFileFolder, _Component);\n\n  function AddFileFolder(props) {\n    var _this;\n\n    _classCallCheck(this, AddFileFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFileFolder).call(this, props));\n\n    _this.onChangepick = function (event) {\n      seleted_ids.length = 0;\n\n      for (var j = 0; j < event.length; j++) {\n        seleted_ids.push(event[j].value);\n      }\n\n      console.log(seleted_ids);\n    };\n\n    _this.state = {\n      name: '',\n      ObjOrganizations: [],\n      ObjGroup: [],\n      fields: {},\n      organization_template: {},\n      group_template: {},\n      error: {}\n    };\n    _this.redirectOrganization = _this.redirectOrganization.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.redirectDashboard = _this.redirectDashboard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddFileFolder, [{\n    key: \"redirectDashboard\",\n    value: function redirectDashboard() {\n      this.props.history.push('/Collection');\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var fields = this.state.fields;\n      var errors = {};\n      var formIsValid = true;\n      var query = new URLSearchParams(this.props.location.search);\n      var token = query.get('organization');\n      var group_string = seleted_ids.toString(); //action \n\n      fields[\"action\"] = \"createFileFolders\";\n      fields[\"organizationid\"] = token;\n      fields[\"groups\"] = group_string; //organization_name\n\n      if (!fields[\"file_folder_name\"]) {\n        formIsValid = false;\n        errors[\"file_folder_name\"] = \"Cannot be empty\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"folderSubmit\",\n    value: function folderSubmit(e) {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        this.createFolderApi();\n        console.log(this.state.fields);\n      } else {\n        alert(\"Mandatory Field Emplty!\");\n      }\n    }\n  }, {\n    key: \"handleChangeName\",\n    value: function handleChangeName(field, e) {\n      var fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields: fields\n      });\n    }\n  }, {\n    key: \"redirectOrganization\",\n    value: function redirectOrganization() {\n      this.props.history.push('/Organization');\n    }\n  }, {\n    key: \"GetOrganizationDetail\",\n    value: function GetOrganizationDetail() {\n      var _this2 = this;\n\n      var organization_template = this.state.organization_template;\n      var ObjOrganizations = this.state.ObjOrganizations;\n      organization_template[\"action\"] = \"getOrganizationDetails\";\n      var query = new URLSearchParams(this.props.location.search);\n      var organizationid = query.get('organization');\n      organization_template[\"organizationid\"] = organizationid;\n      fetch(global.api_url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.organization_template)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var status = response.status;\n        var name = response.name;\n\n        if (status === \"true\") {\n          _this2.setState({\n            ObjOrganizations: response.name\n          });\n        }\n      });\n    }\n  }, {\n    key: \"GetGroupList\",\n    value: function GetGroupList() {\n      var _this3 = this;\n\n      var group_template = this.state.group_template;\n      var ObjGroup = this.state.ObjGroup;\n      group_template[\"action\"] = \"getGroupList\";\n      var query = new URLSearchParams(this.props.location.search);\n      var organizationid = query.get('organization');\n      group_template[\"organizationid\"] = organizationid;\n      fetch(global.api_url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.group_template)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var status = response.status;\n        var group_details = response.group_details;\n\n        if (status === \"true\") {\n          _this3.setState({\n            ObjGroup: group_details\n          });\n\n          for (var i = 0; i < _this3.state.ObjGroup.length; i++) {\n            options.push({\n              label: _this3.state.ObjGroup[i].name,\n              value: _this3.state.ObjGroup[i].id\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"createFolderApi\",\n    value: function createFolderApi() {\n      var _this4 = this;\n\n      var query = new URLSearchParams(this.props.location.search);\n      var token = query.get('organization');\n      fetch(global.api_url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.fields)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var status = response.status;\n\n        if (status === \"true\") {\n          _this4.props.history.push('/Attachment?organization=' + token);\n        } else {\n          alert(\"Something went wrong, please try again\");\n        }\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      if (window.confirm(\"Are you sure you want to log out?\")) {\n        localStorage.clear();\n        window.location.href = '/';\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.GetOrganizationDetail();\n      this.GetGroupList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var groupList = this.state.ObjGroup.map(function (v) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          class: \"dropdown-menu-item checkbox\",\n          for: \"g1360\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"file_folder_group_ids\",\n          name: \"file_folder_group_ids\",\n          type: \"checkbox\",\n          value: \"g1360\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          class: \"glyphicon glyphicon-unchecked\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }), v.name));\n      });\n\n      if (localStorage.getItem('session')) {\n        return React.createElement(\"div\", {\n          class: \"bodyscroll\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"navbar navbar-inverse navbar-static-top\",\n          role: \"navigation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"navbar-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"navbar-toggle\",\n          \"data-toggle\": \"collapse\",\n          \"data-target\": \".navbar-collapse\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"Toggle navigation\"), React.createElement(\"span\", {\n          class: \"icon-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          class: \"icon-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          class: \"icon-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          class: \"navbar-collapse collapse\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          class: \"nav navbar-nav navbar-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          class: \"home1\",\n          onClick: this.redirectDashboard,\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Arodek\"))), React.createElement(\"ul\", {\n          class: \"nav navbar-nav navbar-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          class: \"active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: this.redirectOrganization,\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, \"Admin\")), React.createElement(\"li\", {\n          class: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Edit Profile\")), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: this.logout,\n          rel: \"nofollow\",\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, \"Log Out\")))))), React.createElement(\"div\", {\n          class: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"col-xs-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          class: \"\",\n          onClick: this.redirectOrganization,\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Admin\"), \" \\xBB \", React.createElement(\"a\", {\n          class: \"\",\n          onClick: this.redirectOrganization,\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Organization\"), \" \\xBB \", React.createElement(\"a\", {\n          class: \"\",\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"Supporting Files\"))), React.createElement(\"div\", {\n          class: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"col-xs-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, \"New File Folder\"), React.createElement(\"form\", {\n          \"accept-charset\": \"UTF-8\",\n          onSubmit: this.folderSubmit.bind(this),\n          class: \"new_file_folder\",\n          id: \"new_file_folder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          name: \"utf8\",\n          type: \"hidden\",\n          value: \"\\u2713\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"authenticity_token\",\n          type: \"hidden\",\n          value: \"0qg+Ew1bfTQhYZVeILoFPOUpwulCQXei6e+JejzmK9M=\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          for: \"file_folder_name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, \"Name\"), \":\", React.createElement(\"input\", {\n          class: \"form-control\",\n          placeholder: \"Name\",\n          id: \"file_folder_name\",\n          name: \"file_folder_name\",\n          type: \"text\",\n          onChange: this.handleChangeName.bind(this, \"file_folder_name\"),\n          value: this.state.fields[\"file_folder_name\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        })), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"Access for the Groups\"), React.createElement(\"div\", {\n          class: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"btn-group\",\n          role: \"group\",\n          \"aria-label\": \"...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"btn-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(ReactMultiSelectCheckboxes, {\n          options: options,\n          onChange: this.onChangepick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        })))), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          class: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          class: \"btn btn-success\",\n          name: \"commit\",\n          type: \"submit\",\n          value: \"Save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }), \"\\xA0\", React.createElement(\"a\", {\n          class: \"btn btn-default\",\n          href: \"\",\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, \"Cancel\")), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }))))));\n      } else {\n        window.location.href = '/';\n      }\n    }\n  }]);\n\n  return AddFileFolder;\n}(Component);\n\nexport default AddFileFolder;","map":{"version":3,"sources":["/Users/TTN/merp_react_web_dev/src/admin/organization/file_attachments/AddFileFolder.js"],"names":["React","Component","Select","queryString","ReactMultiSelectCheckboxes","BrowserRouter","Router","NavLink","Switch","Link","Route","HashRouter","options","seleted_ids","AddFileFolder","props","onChangepick","event","length","j","push","value","console","log","state","name","ObjOrganizations","ObjGroup","fields","organization_template","group_template","error","redirectOrganization","bind","redirectDashboard","history","errors","formIsValid","query","URLSearchParams","location","search","token","get","group_string","toString","setState","e","preventDefault","handleValidation","createFolderApi","alert","field","target","organizationid","fetch","global","api_url","method","headers","Accept","body","JSON","stringify","then","response","json","status","group_details","i","label","id","window","confirm","localStorage","clear","href","GetOrganizationDetail","GetGroupList","groupList","map","v","getItem","logout","folderSubmit","handleChangeName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport queryString from 'query-string'\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport { BrowserRouter as Router, NavLink, Switch, Link, Route ,HashRouter} from 'react-router-dom';\nconst options = [];\nconst seleted_ids=[];\n\nclass AddFileFolder extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        name: '',\n        ObjOrganizations: [],\n        ObjGroup: [],\n     \n        fields: {},\n        organization_template: {},\n        group_template: {},\n        error: {}\n\n        }\n        this.redirectOrganization=this.redirectOrganization.bind(this);\n\t\tthis.redirectDashboard=this.redirectDashboard.bind(this);\n     }\n     \n\t redirectDashboard(){\n\t this.props.history.push('/Collection');\n\t }\n     handleValidation(){\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n      const query = new URLSearchParams(this.props.location.search);\n      const token = query.get('organization');\n\t  const group_string = seleted_ids.toString();\n\t  \n     //action \n     fields[\"action\"]=\"createFileFolders\";\n     fields[\"organizationid\"]=token;\n\t fields[\"groups\"]=group_string;\n    \n      //organization_name\n      if(!fields[\"file_folder_name\"]){\n         formIsValid = false;\n         errors[\"file_folder_name\"] = \"Cannot be empty\";\n      }\n     this.setState({errors: errors});\n\n     return formIsValid;\n    }\n    \n    folderSubmit(e){\n      e.preventDefault();\n      if(this.handleValidation()){\n        this.createFolderApi();\n        console.log(this.state.fields);\n      }else{\n         alert(\"Mandatory Field Emplty!\");\n      }\n    \n    }\n    handleChangeName(field, e){         \n      let fields = this.state.fields;\n      fields[field] = e.target.value;        \n      this.setState({fields});\n    }\n    redirectOrganization(){\n      this.props.history.push('/Organization');\n      }\n\n    GetOrganizationDetail(){\n      let organization_template = this.state.organization_template;\n      let ObjOrganizations = this.state.ObjOrganizations;\n      organization_template[\"action\"]=\"getOrganizationDetails\"; \n      const query = new URLSearchParams(this.props.location.search);\n      const organizationid = query.get('organization');\n      organization_template[\"organizationid\"]=organizationid; \n      fetch(global.api_url,\n         {\n             method: 'POST',\n             headers: {\n                 Accept: 'application/json',\n                 'Content-Type': 'application/json'\n             },\n             body: JSON.stringify(this.state.organization_template)\n         })\n          .then((response) => response.json())\n          .then((response) => { \n            const status=response.status;\n            const name = response.name;\n           if(status === \"true\")\n           {\n            this.setState({\n              ObjOrganizations: response.name\n          })\n           }       \n     });\n     \n    }\n\n    GetGroupList(){\n      let group_template = this.state.group_template;\n      let ObjGroup = this.state.ObjGroup;\n      group_template[\"action\"]=\"getGroupList\";\n      const query = new URLSearchParams(this.props.location.search);\n      const organizationid = query.get('organization');\n      group_template[\"organizationid\"]=organizationid;\n      fetch(global.api_url,\n         {\n             method: 'POST',\n             headers: {\n                 Accept: 'application/json',\n                 'Content-Type': 'application/json'\n             },\n             body: JSON.stringify(this.state.group_template)\n         })\n          .then((response) => response.json())\n          .then((response) => { \n            const status=response.status;\n            const group_details = response.group_details;\n           if(status === \"true\")\n           {\n            this.setState({\n              ObjGroup: group_details\n          })\n\n           for(let i=0;i<this.state.ObjGroup.length;i++){\n            options.push(\n              { \n                label: this.state.ObjGroup[i].name,\n                 value: this.state.ObjGroup[i].id\n             }\n\n            )\n           }\n\n           }       \n     });\n     \n    }\n    \n    createFolderApi()\n    {\n      const query = new URLSearchParams(this.props.location.search);\n      const token = query.get('organization');\n      fetch(global.api_url,\n      {\n          method: 'POST',\n          headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'                 \n          },\n          body: JSON.stringify(this.state.fields)\n      })\n      .then((response) => response.json())\n      .then((response) => {\n\n           const status=response.status;\n           if(status === \"true\")\n           {\n              this.props.history.push('/Attachment?organization='+ token);\n           }\n           else{\n              alert(\"Something went wrong, please try again\");\n           }\n      });\n    }\n\n    logout() {\n      if (window.confirm(\"Are you sure you want to log out?\")) {\n    localStorage.clear();\n    window.location.href = '/';\n    }\n  }\n\n  onChangepick=event=>{\n  seleted_ids.length=0;\n\n  \n  for(let j=0;j<event.length;j++){\n    seleted_ids.push(event[j].value)\n   }\n\n   console.log(seleted_ids);\n   \n }\n  componentDidMount() {\n    this.GetOrganizationDetail();\n    this.GetGroupList();\n  }\n\n  render() {\n\tlet groupList = this.state.ObjGroup.map(v => (\n    <li>\n  <label class=\"dropdown-menu-item checkbox\" for=\"g1360\">\n\t<input id=\"file_folder_group_ids\" name=\"file_folder_group_ids\" type=\"checkbox\" value=\"g1360\" />\n\t<span class=\"glyphicon glyphicon-unchecked\"></span>\n\t{v.name}\n  </label>\n    </li>\n    ));\n\tif (localStorage.getItem('session')) {\n    return (\n        <div class=\"bodyscroll\">\n    <div class=\"navbar navbar-inverse navbar-static-top\" role=\"navigation\">\n    <div class=\"container\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n          <span class=\"sr-only\">Toggle navigation</span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n      </div>\n      <div class=\"navbar-collapse collapse\">\n        <ul class=\"nav navbar-nav navbar-left\">\n          <li><a class=\"home1\" onClick={this.redirectDashboard} data-original-title=\"\" title=\"\">Arodek</a></li>\n        </ul>\n        <ul class=\"nav navbar-nav navbar-right\">\n              <li class=\"active\"><a onClick={this.redirectOrganization} data-original-title=\"\" title=\"\">Admin</a></li>\n            <li class=\"\"><a data-original-title=\"\" title=\"\">Edit Profile</a></li>\n            <li><a onClick= {this.logout} rel=\"nofollow\" data-original-title=\"\" title=\"\">Log Out</a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  \n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n          <a class=\"\" onClick={this.redirectOrganization} data-original-title=\"\" title=\"\">Admin</a> » <a class=\"\" onClick={this.redirectOrganization} data-original-title=\"\" title=\"\">Organization</a> » <a class=\"\" data-original-title=\"\" title=\"\">Supporting Files</a>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-xs-12\">\n          <h2>New File Folder</h2>\n  \n  <form accept-charset=\"UTF-8\"\n  onSubmit= {this.folderSubmit.bind(this)}\n  class=\"new_file_folder\"\n  id=\"new_file_folder\">\n<div>\n\t<input name=\"utf8\" type=\"hidden\" value=\"✓\"/>\n\t<input name=\"authenticity_token\" type=\"hidden\" value=\"0qg+Ew1bfTQhYZVeILoFPOUpwulCQXei6e+JejzmK9M=\"/>\n\t</div>\n  <div class=\"form-group\">\n      <label for=\"file_folder_name\">Name</label>:\n      <input class=\"form-control\"\n      placeholder=\"Name\"\n      id=\"file_folder_name\" \n      name=\"file_folder_name\" \n      type=\"text\" \n      onChange={this.handleChangeName.bind(this, \"file_folder_name\")}\n      value={this.state.fields[\"file_folder_name\"]}\n     />\n    </div>\n\t <h4>Access for the Groups</h4>\n\t \n\t \n     <div class=\"form-group\">\n        <div class=\"btn-group\" role=\"group\" aria-label=\"...\">\n          <div class=\"btn-group\">\n            {/* <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\"> Select Group Access <span class=\"caret\"></span></button>\n            <ul class=\"dropdown-menu\">\n             {groupList}   \n            </ul> */}\n\n\n             <ReactMultiSelectCheckboxes options={options} onChange={this.onChangepick} />\n          </div>\n        </div>\n    </div>\n  \n    <hr/>\n    <div class=\"form-group\">\n      <input class=\"btn btn-success\" name=\"commit\" type=\"submit\" value=\"Save\"/>&nbsp;\n      <a class=\"btn btn-default\" href=\"\" data-original-title=\"\" title=\"\">Cancel</a>\n    </div>\n  <hr/>\n  </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n\t}else{\n\twindow.location.href = '/';\t\n\t}\n  }\n}\nexport default AddFileFolder;"]},"metadata":{},"sourceType":"module"}