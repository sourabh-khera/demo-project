{"ast":null,"code":"var _jsxFileName = \"/Users/TTN/merp_react_web_dev/src/components/MultiPage.js\";\nimport React, { Component } from 'react';\nimport Page from './Page';\nimport alaSQLSpace from 'alasql';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport decode from 'decode-html';\nimport Base64 from 'base-64';\nimport { Preview, print } from 'react-html2pdf';\n/*import './pdf_style.css';*/\n\nvar myComponents;\n\nif (localStorage.getItem('session')) {\n  var safeguard = localStorage.getItem(\"safeguard\");\n  var safeguarddata = JSON.parse(safeguard);\n  var collections = safeguarddata.collections;\n  var collectionid = '1036';\n  var res = alaSQLSpace('SELECT * FROM ? where id = ?', [collections, collectionid]);\n  var res_count = res.length;\n\n  if (res_count > 0) {\n    myComponents = [res[0]];\n  }\n} else {\n  myComponents = [];\n}\n\nvar supporting_material_title = myComponents.map(function (v) {\n  return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, v.supporting_material_title);\n});\nvar supporting_material_content = myComponents.map(function (v) {\n  return v.supporting_material_content;\n});\n\nvar MultiPage = function MultiPage(_ref) {\n  var id = _ref.id;\n  return React.createElement(Page, {\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, supporting_material_title, ReactHtmlParser(supporting_material_content));\n};\n\nexport default MultiPage;","map":{"version":3,"sources":["/Users/TTN/merp_react_web_dev/src/components/MultiPage.js"],"names":["React","Component","Page","alaSQLSpace","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","decode","Base64","Preview","print","myComponents","localStorage","getItem","safeguard","safeguarddata","JSON","parse","collections","collectionid","res","res_count","length","supporting_material_title","map","v","supporting_material_content","MultiPage","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,QAAxB;AACA,OAAOC,eAAP,IAA0BC,YAA1B,EAAwCC,oBAAxC,EAA8DC,WAA9D,QAAiF,mBAAjF;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,gBAA/B;AACA;;AACA,IAAIC,YAAJ;;AACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AAC/B,MAAIC,SAAS,GAAEF,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;AACA,MAAIE,aAAa,GAACC,IAAI,CAACC,KAAL,CAAWH,SAAX,CAAlB;AACA,MAAII,WAAW,GAACH,aAAa,CAACG,WAA9B;AACH,MAAIC,YAAY,GAAG,MAAnB;AACG,MAAIC,GAAG,GAAGlB,WAAW,CAAC,8BAAD,EAAiC,CAACgB,WAAD,EAAaC,YAAb,CAAjC,CAArB;AACH,MAAIE,SAAS,GAAGD,GAAG,CAACE,MAApB;;AAEA,MAAGD,SAAS,GAAC,CAAb,EACA;AACCV,IAAAA,YAAY,GAAG,CAACS,GAAG,CAAC,CAAD,CAAJ,CAAf;AACA;AACH,CAZD,MAYK;AACJT,EAAAA,YAAY,GAAG,EAAf;AACA;;AAGE,IAAIY,yBAAyB,GAAGZ,YAAY,CAACa,GAAb,CAAiB,UAAAC,CAAC;AAAA,SAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,CAAC,CAACF,yBAAP,CADkD;AAAA,CAAlB,CAAhC;AAGF,IAAIG,2BAA2B,GAAGf,YAAY,CAACa,GAAb,CAAiB,UAAAC,CAAC;AAAA,SACpDA,CAAC,CAACC,2BADkD;AAAA,CAAlB,CAAlC;;AAID,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAEC,EAAF,QAAEA,EAAF;AAAA,SAClB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,yBADD,EAECpB,eAAe,CAACuB,2BAAD,CAFhB,CADkB;AAAA,CAAlB;;AAOA,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Page from './Page';\nimport alaSQLSpace from 'alasql';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport decode from 'decode-html';\nimport Base64 from 'base-64';\nimport { Preview, print } from 'react-html2pdf';\n/*import './pdf_style.css';*/\nlet myComponents;\nif (localStorage.getItem('session')) {\n      let safeguard= localStorage.getItem(\"safeguard\");\n      let safeguarddata=JSON.parse(safeguard);\n      let collections=safeguarddata.collections;\n\t  let collectionid = '1036';\n      let res = alaSQLSpace('SELECT * FROM ? where id = ?', [collections,collectionid]);\n\t  let res_count = res.length;\n\t  \n\t  if(res_count>0)\n\t  {\n\t\t  myComponents = [res[0]];\n\t  }\n}else{\n\tmyComponents = [];\n}\n\t  \n\t  \n\t  let supporting_material_title = myComponents.map(v => (\n\t  <h2>{v.supporting_material_title}</h2>\n    ));\n\tlet supporting_material_content = myComponents.map(v => (\n\tv.supporting_material_content\n    )); \n\nconst MultiPage = ({id}) => (\n<Page id={id}>\n{supporting_material_title}\n{ReactHtmlParser(supporting_material_content)}\n</Page>\n);\n\nexport default MultiPage;"]},"metadata":{},"sourceType":"module"}