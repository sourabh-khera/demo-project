{"ast":null,"code":"import _classCallCheck from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/TTN/merp_react_web_dev/src/flowchart.js\";\nimport React, { Component } from 'react'; // import alaSQLSpace from 'alasql';\n\nvar FlowChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FlowChart, _Component);\n\n  function FlowChart() {\n    var _this;\n\n    _classCallCheck(this, FlowChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FlowChart).call(this));\n    _this.state = {\n      flowChartCards: []\n    };\n    return _this;\n  }\n\n  _createClass(FlowChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          cards = _this$props.cards,\n          objCards = _this$props.objCards,\n          chartid = _this$props.chartid,\n          actions = _this$props.actions,\n          charts = _this$props.charts;\n      var flowChartCards = cards.filter(function (item) {\n        return item.chart_id === chartid;\n      });\n      this.setState({\n        flowChartCards: flowChartCards\n      });\n      console.log(flowChartCards, \"cards----\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          closeFlowChartView = _this$props2.closeFlowChartView,\n          title = _this$props2.title;\n      console.log(title);\n      return React.createElement(\"div\", {\n        className: \"flow-chart-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"chart-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, title), React.createElement(\"span\", {\n        className: \"cross-icon-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-times cross-icon\",\n        onClick: closeFlowChartView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        className: \"cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, flowChartCards.map(function (item, idx) {\n        return React.createElement(\"li\", {\n          className: \"column\",\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return FlowChart;\n}(Component);\n\nexport { FlowChart as default };\n;","map":{"version":3,"sources":["/Users/TTN/merp_react_web_dev/src/flowchart.js"],"names":["React","Component","FlowChart","state","flowChartCards","props","cards","objCards","chartid","actions","charts","filter","item","chart_id","setState","console","log","closeFlowChartView","title","map","idx"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;IAEqBC,S;;;;;AACnB,uBAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAW;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAAX;AAFW;AAGd;;;;wCACqB;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACVC,KADU,eACVA,KADU;AAAA,UACHC,QADG,eACHA,QADG;AAAA,UACOC,OADP,eACOA,OADP;AAAA,UACgBC,OADhB,eACgBA,OADhB;AAAA,UACyBC,MADzB,eACyBA,MADzB;AAElB,UAAMN,cAAc,GAAGE,KAAK,CAACK,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,QAAL,KAAkBL,OAAtB;AAAA,OAAjB,CAAvB;AACA,WAAKM,QAAL,CAAc;AAACV,QAAAA,cAAc,EAAdA;AAAD,OAAd;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,cAAZ,EAA4B,WAA5B;AACD;;;6BACO;AAAA,yBAC8B,KAAKC,KADnC;AAAA,UACCY,kBADD,gBACCA,kBADD;AAAA,UACqBC,KADrB,gBACqBA,KADrB;AAENH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,aACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BA,KAA9B,CADD,EAEC;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuC;AAAG,QAAA,SAAS,EAAC,yBAAb;AAAuC,QAAA,OAAO,EAAED,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,CAFD,EAGE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIb,cAAc,CAACe,GAAf,CAAmB,UAACP,IAAD,EAAOQ,GAAP;AAAA,eAAe;AAAI,UAAA,SAAS,EAAC,QAAd;AAAuB,UAAA,GAAG,EAAEA,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgC,CAAf;AAAA,OAAnB,CAFJ,CAHF,CADF;AAgBD;;;;EA9BoCnB,S;;SAAlBC,S;AA+BpB","sourcesContent":["import React, {Component} from 'react';\n// import alaSQLSpace from 'alasql';\n\nexport default class FlowChart extends Component {\n  constructor(){\n    super();\n    this.state={flowChartCards: [] };\n}\n  componentDidMount (){\n    const { cards, objCards, chartid, actions, charts } = this.props;\n    const flowChartCards = cards.filter(item => item.chart_id === chartid);\n    this.setState({flowChartCards});\n    console.log(flowChartCards, \"cards----\");\n  }\n  render(){\n    const {closeFlowChartView, title} = this.props;\n    console.log(title)\n    return (\n      <div className='flow-chart-container'>\n       <div className='chart-title'>{title}</div>\n       <span className='cross-icon-container'><i className=\"fas fa-times cross-icon\" onClick={closeFlowChartView}></i></span> \n        <ul className='cards'>\n          {\n            flowChartCards.map((item, idx) =>(<li className='column' key={idx}>\n              <ul>\n              </ul>\n              \n              \n              </li>))\n          } \n        </ul>\n      </div>\n    )\n  }\n};"]},"metadata":{},"sourceType":"module"}