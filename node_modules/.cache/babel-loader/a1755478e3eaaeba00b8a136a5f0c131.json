{"ast":null,"code":"import _classCallCheck from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/TTN/merp_react_web_dev/src/messages.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nimport { BrowserRouter as Router, NavLink, Switch, Link, Route, HashRouter } from 'react-router-dom';\n\nvar messages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(messages, _Component);\n\n  function messages(props) {\n    var _this;\n\n    _classCallCheck(this, messages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(messages).call(this, props));\n    _this.state = {\n      isLoggedIn: false,\n      messages_template: {},\n      ObjMessages: [],\n      ObjMessagesList: [],\n      fields: {},\n      render: false\n    };\n    _this.redirectDashboard = _this.redirectDashboard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.replyMessage = _this.replyMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(messages, [{\n    key: \"logout\",\n    value: function logout() {\n      if (window.confirm(\"Are you sure you want to log out?\")) {\n        localStorage.clear();\n        window.location.href = '/';\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.viewMessageList();\n    }\n  }, {\n    key: \"redirectDashboard\",\n    value: function redirectDashboard() {\n      this.props.history.push('/Collection');\n    }\n  }, {\n    key: \"replyMessage\",\n    value: function replyMessage(messageid) {\n      this.props.history.push('/messages?id=' + messageid);\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var fields = this.state.fields;\n      var errors = {};\n      var formIsValid = true;\n      var session = localStorage.getItem(\"session\");\n      var session_array = JSON.parse(session);\n      var userid = session_array.id;\n      var organizationid = session_array.organization_id;\n      var query = new URLSearchParams(this.props.location.search);\n      var id = query.get('id'); //param \n\n      fields[\"action\"] = \"replyMessage\";\n      fields[\"userid\"] = userid;\n      fields[\"organizationid\"] = organizationid;\n      fields[\"conversation_id\"] = id; //message\n\n      if (!fields[\"message\"]) {\n        formIsValid = false;\n        errors[\"message\"] = \"failed to send message\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"handleChangeName\",\n    value: function handleChangeName(field, e) {\n      var fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields: fields\n      });\n    }\n  }, {\n    key: \"messageSubmit\",\n    value: function messageSubmit(e) {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        this.replyMessageApi();\n        console.log(this.state.fields);\n      } else {\n        alert(\"failed to send message\");\n      }\n    }\n  }, {\n    key: \"replyMessageApi\",\n    value: function replyMessageApi() {\n      var _this2 = this;\n\n      fetch(global.api_url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.fields)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var status = response.status;\n\n        if (status === \"true\") {\n          _this2.props.history.push('/messages');\n        } else {\n          alert(\"Something went wrong, please try again\");\n        }\n      });\n    }\n  }, {\n    key: \"viewMessageList\",\n    value: function viewMessageList() {\n      var safeguard_messages = localStorage.getItem(\"safeguard_messages\");\n      var safeguard_messages_array = JSON.parse(safeguard_messages);\n      this.setState({\n        ObjMessagesList: safeguard_messages_array.conversation\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (localStorage.getItem('session')) {\n        var query = new URLSearchParams(this.props.location.search);\n        var id = query.get('id');\n        var messageList;\n\n        if (id != undefined) {\n          messageList = this.state.ObjMessagesList.map(function (v) {\n            return React.createElement(\"li\", {\n              className: v.unread != 'false' ? \"\" : \"byUser\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"msg-inner\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"msg-header\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"msg-sender\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, v.sender.first_name, \" \", v.sender.last_name), React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 129\n              },\n              __self: this\n            }, v.metadata.group)), React.createElement(\"div\", {\n              className: \"msg-time\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131\n              },\n              __self: this\n            }, new Intl.DateTimeFormat('en-US', {\n              year: 'numeric',\n              month: '2-digit',\n              day: '2-digit',\n              hour: '2-digit',\n              minute: '2-digit'\n            }).format(new Date(v.last_message_at).getTime()))), React.createElement(\"div\", {\n              className: \"msg-body\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }, v.snippet), React.createElement(\"div\", {\n              className: \"clear\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 134\n              },\n              __self: this\n            })));\n          });\n        } else {\n          messageList = this.state.ObjMessagesList.map(function (v) {\n            return React.createElement(\"li\", {\n              className: v.unread != 'false' ? \"unread\" : \"\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              className: \"ember-view\",\n              onClick: function onClick() {\n                return _this3.replyMessage(v.id);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"msg-replied\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 143\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"icon\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144\n              },\n              __self: this\n            }, v.unread != 'false' ? '✓' : '—')), React.createElement(\"div\", {\n              className: \"msg-inner\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"msg-header\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"msg-sender\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 150\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151\n              },\n              __self: this\n            }, v.sender.first_name, \" \", v.sender.last_name), React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152\n              },\n              __self: this\n            }, v.metadata.group)), React.createElement(\"div\", {\n              className: \"msg-time\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 154\n              },\n              __self: this\n            }, new Intl.DateTimeFormat('en-US', {\n              year: 'numeric',\n              month: '2-digit',\n              day: '2-digit',\n              hour: '2-digit',\n              minute: '2-digit'\n            }).format(new Date(v.last_message_at).getTime()))), React.createElement(\"div\", {\n              className: \"msg-body\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }, v.snippet), React.createElement(\"div\", {\n              className: \"clear\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }))), React.createElement(\"button\", {\n              className: \"delete\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              },\n              __self: this\n            }, \"x\"), React.createElement(\"div\", {\n              className: \"clear\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            }));\n          });\n        }\n\n        return React.createElement(\"div\", {\n          id: \"ember361\",\n          className: \"ember-view ember-app\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: this.redirectDashboard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"h\")), React.createElement(\"li\", {\n          className: \"back\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"M\")), React.createElement(\"li\", {\n          className: \"titlebar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Messages\"), React.createElement(\"li\", {\n          className: \"refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"\\u27F3\")), React.createElement(\"li\", {\n          className: \"edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Edit\")))), id != undefined ? React.createElement(\"div\", {\n          id: \"application\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"conversation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"messages\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, messageList, React.createElement(\"li\", {\n          class: \"replymessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          acceptCharset: \"UTF-8\",\n          name: \"messageForm\",\n          onSubmit: this.messageSubmit.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"Reply\"), React.createElement(\"input\", {\n          id: \"ember\",\n          class: \"ember-view ember-text-field\",\n          type: \"hidden\",\n          name: \"conversation_id\",\n          value: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }), React.createElement(\"textarea\", {\n          id: \"ember\",\n          class: \"ember-view ember-text-area js-auto-size\",\n          name: \"message\",\n          onChange: this.handleChangeName.bind(this, \"message\"),\n          value: this.state.fields[\"message\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          class: \"message-button\",\n          \"data-ember-action\": \"19887\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Send Message\")))))) : React.createElement(\"div\", {\n          id: \"application\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"messages messages-index\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, messageList, React.createElement(\"li\", {\n          className: \"messageButtonCell\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"ember-view message-button message-button-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, \"Send a Message\")))));\n      } else {\n        window.location.href = '/';\n      }\n    }\n  }]);\n\n  return messages;\n}(Component);\n\nexport default messages;","map":{"version":3,"sources":["/Users/TTN/merp_react_web_dev/src/messages.js"],"names":["React","Component","Home","confirmAlert","BrowserRouter","Router","NavLink","Switch","Link","Route","HashRouter","messages","props","state","isLoggedIn","messages_template","ObjMessages","ObjMessagesList","fields","render","redirectDashboard","bind","replyMessage","window","confirm","localStorage","clear","location","href","viewMessageList","history","push","messageid","errors","formIsValid","session","getItem","session_array","JSON","parse","userid","id","organizationid","organization_id","query","URLSearchParams","search","get","setState","field","e","target","value","preventDefault","handleValidation","replyMessageApi","console","log","alert","fetch","global","api_url","method","headers","Accept","body","stringify","then","response","json","status","safeguard_messages","safeguard_messages_array","conversation","messageList","undefined","map","v","unread","sender","first_name","last_name","metadata","group","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","last_message_at","getTime","snippet","messageSubmit","handleChangeName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { BrowserRouter as Router, NavLink, Switch, Link, Route ,HashRouter} from 'react-router-dom';\nclass messages extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\t\t   isLoggedIn: false,\n\t\t   messages_template: {},\n\t\t   ObjMessages: [],\n\t\t   ObjMessagesList: [],\n\t\t   fields: {},\n\t\t   render: false\n        }\n\t\tthis.redirectDashboard=this.redirectDashboard.bind(this);\n\t\tthis.replyMessage=this.replyMessage.bind(this);\n     }\n\n    logout() {\n      if (window.confirm(\"Are you sure you want to log out?\")) {\n    localStorage.clear();\n    window.location.href = '/';\n    }\n  }\n  \n  componentDidMount(){\n  this.viewMessageList();\n  }\n  \n  redirectDashboard(){\n  this.props.history.push('/Collection');\n  }\n  replyMessage(messageid)\n  {\n\t  this.props.history.push('/messages?id=' + messageid);\n  }\n  \n  handleValidation(){\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n\t  let session= localStorage.getItem(\"session\");\n      let session_array=JSON.parse(session);\n\t  let userid = session_array.id;\n\t  let organizationid = session_array.organization_id;\n\t  const query = new URLSearchParams(this.props.location.search);\n      const id = query.get('id');\n     //param \n     fields[\"action\"]=\"replyMessage\";\n\t fields[\"userid\"]=userid;\n\t fields[\"organizationid\"]=organizationid;\n\t fields[\"conversation_id\"]=id;\n      //message\n      if(!fields[\"message\"]){\n         formIsValid = false;\n         errors[\"message\"] = \"failed to send message\";\n      }\n     this.setState({errors: errors});\n     return formIsValid;\n    }\n\t\n  handleChangeName(field, e){         \n  let fields = this.state.fields;\n  fields[field] = e.target.value;        \n  this.setState({fields});\n  }\n  messageSubmit(e){\n      e.preventDefault();\n      if(this.handleValidation()){\n        this.replyMessageApi();\n        console.log(this.state.fields);\n      }else{\n         alert(\"failed to send message\");\n      }\n    }\n  \n  replyMessageApi()\n    {\n      fetch(global.api_url,\n      {\n          method: 'POST',\n          headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'                 \n          },\n          body: JSON.stringify(this.state.fields)\n      })\n      .then((response) => response.json())\n      .then((response) => {\n\n           const status=response.status;\n           if(status === \"true\")\n           {\n              this.props.history.push('/messages');\n           }\n           else{\n              alert(\"Something went wrong, please try again\");\n           }\n      });\n    }\n\t\n  viewMessageList()\n  {\n\t  let safeguard_messages = localStorage.getItem(\"safeguard_messages\");\n      let safeguard_messages_array=JSON.parse(safeguard_messages);\n\t  this.setState({\n      ObjMessagesList: safeguard_messages_array.conversation\n      })\n  }\n  \n  \n \nrender() {\nif (localStorage.getItem('session')) {\nconst query = new URLSearchParams(this.props.location.search);\nconst id = query.get('id');\nlet messageList;\nif(id!=undefined)\n{\nmessageList = this.state.ObjMessagesList.map(v => (\n        <li className={v.unread!='false' ? \"\" : \"byUser\"}>\n              <div className=\"msg-inner\">\n                  <div className=\"msg-header\">\n                    <div className=\"msg-sender\">\n                        <h4>{v.sender.first_name} {v.sender.last_name}</h4>\n                      <strong>{v.metadata.group}</strong>\n                    </div>\n                    <div className=\"msg-time\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit'}).format(new Date(v.last_message_at).getTime())}</div>\n                  </div>\n                  <div className=\"msg-body\">{v.snippet}</div>\n                  <div className=\"clear\"></div>\n                </div>\n          </li>\n    ));\n}else\n{\t\nmessageList = this.state.ObjMessagesList.map(v => (\n            <li className={v.unread!='false' ? \"unread\" : \"\"}>\n            <a className=\"ember-view\" onClick={()=>this.replyMessage(v.id)}>\n              <div className=\"msg-replied\">\n                <span className=\"icon\">\n                 {v.unread!='false' ?  '✓' : '—'}\n                </span>\n              </div>\n              <div className=\"msg-inner\">\n                  <div className=\"msg-header\">\n                    <div className=\"msg-sender\">\n                        <h4>{v.sender.first_name} {v.sender.last_name}</h4>\n                      <strong>{v.metadata.group}</strong>\n                    </div>\n                    <div className=\"msg-time\">{new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit'}).format(new Date(v.last_message_at).getTime())}</div>\n                  </div>\n                  <div className=\"msg-body\">{v.snippet}</div>\n                  <div className=\"clear\"></div>\n                </div>\n              </a>\n              <button className=\"delete\">x</button>\n              <div className=\"clear\"></div>\n          </li>\n    ));\t\n}\n\t\n return (\n    <div id=\"ember361\" className=\"ember-view ember-app\">\n\t<div className=\"menu\">\n        <ul>\n          <li className=\"home\"><a onClick= {this.redirectDashboard}>h</a></li>\n          <li className=\"back\"><a>M</a></li>\n          <li className=\"titlebar\">Messages</li>\n          <li className=\"refresh\"><a>⟳</a></li>\n          <li className=\"edit\">\n            <a>Edit</a>\n          </li>\n        </ul>\n      </div>\n\t\n    {id!=undefined ?\n\t<div id=\"application\">\n\t<div class=\"conversation\">\n        <ul className=\"messages\">\n\t\t{messageList}\n        <li class=\"replymessage\">\n      <form acceptCharset=\"UTF-8\"\n\t   name=\"messageForm\"\n\t   onSubmit= {this.messageSubmit.bind(this)}>\n        <span>Reply</span>\n        <input id=\"ember\" class=\"ember-view ember-text-field\" type=\"hidden\" name=\"conversation_id\" value={id} />\n        <textarea id=\"ember\"\n\t\tclass=\"ember-view ember-text-area js-auto-size\"\n\t\tname=\"message\"\n\t\tonChange={this.handleChangeName.bind(this, \"message\")}\n        value={this.state.fields[\"message\"]}>\n\t\t</textarea><br/>\n        <button class=\"message-button\" data-ember-action=\"19887\">Send Message</button>\n      </form>\n    </li>\n        </ul>\n      </div>\n\t  </div>\n\t:\n\t\t<div id=\"application\">\n        <ul className=\"messages messages-index\">\n\t\t{messageList}\n        <li className=\"messageButtonCell\">\n          <a className=\"ember-view message-button message-button-center\">Send a Message</a>\n        </li>\n        </ul>\n      </div>\n\t}\n      \n\t  \n      </div>\n    );\n} else {\n window.location.href = '/';\n}\t\n}\n}\nexport default messages;"]},"metadata":{},"sourceType":"module"}