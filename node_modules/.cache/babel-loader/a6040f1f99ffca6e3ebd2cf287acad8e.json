{"ast":null,"code":"import _classCallCheck from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/TTN/merp_react_web_dev/src/admin/organization/collections/AddEventAids.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport queryString from 'query-string';\n\nvar AddEventAids =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddEventAids, _Component);\n\n  function AddEventAids(props) {\n    var _this;\n\n    _classCallCheck(this, AddEventAids);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddEventAids).call(this, props));\n    _this.state = {\n      chart_title: '',\n      chart_priority: 0,\n      chart_loggable: 'false',\n      ObjOrganizations: [],\n      ObjCollections: [],\n      items: [],\n      fields: {},\n      organization_template: {},\n      collection_template: {},\n      error: {}\n    };\n    _this.redirectOrganization = _this.redirectOrganization.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.redirectPlan = _this.redirectPlan.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.redirectDashboard = _this.redirectDashboard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddEventAids, [{\n    key: \"redirectDashboard\",\n    value: function redirectDashboard() {\n      this.props.history.push('/Collection');\n    }\n  }, {\n    key: \"redirectPlan\",\n    value: function redirectPlan(e) {\n      this.props.history.push('/collections/Collections?organization=' + e);\n    }\n  }, {\n    key: \"handleValidation\",\n    value: function handleValidation() {\n      var fields = this.state.fields;\n      var errors = {};\n      var formIsValid = true;\n      var query = new URLSearchParams(this.props.location.search);\n      var organizationid = query.get('organization');\n      var collectionid = query.get('collectionid');\n      var chart_loggable_isChecked = document.getElementById('chart_loggable').checked;\n      var session = localStorage.getItem(\"session\");\n      var session_array = JSON.parse(session);\n      var userid = session_array.id; //action \n\n      fields[\"action\"] = \"createChart\";\n      fields[\"organizationid\"] = organizationid;\n      fields[\"collectionid\"] = collectionid;\n      fields[\"chart_loggable\"] = chart_loggable_isChecked;\n      fields[\"userid\"] = userid; //chart_title\n\n      if (!fields[\"chart_title\"]) {\n        formIsValid = false;\n        errors[\"chart_title\"] = \"Cannot be empty\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"chartSubmit\",\n    value: function chartSubmit(e) {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        console.log(this.state.fields);\n        this.createChartApi();\n        console.log(this.state.fields);\n      } else {\n        alert(\"Mandatory Field Emplty!\");\n      }\n    }\n  }, {\n    key: \"handleChangeLoggable\",\n    value: function handleChangeLoggable(field, e) {\n      var fields = this.state.fields;\n      var isChecked = e.target.checked;\n      fields[field] = isChecked;\n      this.setState({\n        fields: fields\n      });\n    }\n  }, {\n    key: \"handleChangeName\",\n    value: function handleChangeName(field, e) {\n      var fields = this.state.fields;\n      fields[field] = e.target.value;\n      this.setState({\n        fields: fields\n      });\n    }\n  }, {\n    key: \"redirectOrganization\",\n    value: function redirectOrganization() {\n      this.props.history.push('/Organization');\n    }\n  }, {\n    key: \"GetOrganizationDetail\",\n    value: function GetOrganizationDetail() {\n      var _this2 = this;\n\n      var organization_template = this.state.organization_template;\n      var ObjOrganizations = this.state.ObjOrganizations;\n      organization_template[\"action\"] = \"getOrganizationDetails\";\n      var query = new URLSearchParams(this.props.location.search);\n      var organizationid = query.get('organization');\n      organization_template[\"organizationid\"] = organizationid;\n      fetch(global.api_url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.organization_template)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var status = response.status;\n        var name = response.name;\n\n        if (status === \"true\") {\n          _this2.setState({\n            ObjOrganizations: response.name\n          });\n        }\n      });\n    }\n  }, {\n    key: \"GetCollectionDetails\",\n    value: function GetCollectionDetails() {\n      var _this3 = this;\n\n      var collection_template = this.state.collection_template;\n      var ObjCollection = this.state.ObjCollection;\n      collection_template[\"action\"] = \"detailCollection\";\n      var query = new URLSearchParams(this.props.location.search);\n      var organizationid = query.get('organization');\n      var collectionid = query.get('collectionid');\n      collection_template[\"organizationid\"] = organizationid;\n      collection_template[\"collectionid\"] = collectionid;\n      fetch(global.api_url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.collection_template)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var status = response.status;\n        var details = response.details;\n\n        if (status === \"true\") {\n          _this3.setState({\n            ObjCollection: details\n          });\n        }\n      });\n      console.log(this.ObjCollection);\n    }\n  }, {\n    key: \"createChartApi\",\n    value: function createChartApi() {\n      var _this4 = this;\n\n      var query = new URLSearchParams(this.props.location.search);\n      var organizationid = query.get('organization');\n      var collectionid = query.get('collectionid');\n      fetch(global.api_url, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.fields)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        var status = response.status;\n\n        if (status === \"true\") {\n          _this4.props.history.push('/EventAids?action=create&organization=' + organizationid + '&collectionid=' + collectionid);\n\n          window.location.reload();\n        } else {\n          alert(\"Something went wrong, please try again\");\n        }\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      if (window.confirm(\"Are you sure you want to log out?\")) {\n        localStorage.clear();\n        window.location.href = '/';\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.GetOrganizationDetail();\n      this.GetCollectionDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var query = new URLSearchParams(this.props.location.search);\n      var organizationid = query.get('organization');\n      var collectionList = this.state.ObjCollections.map(function (v) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"{v.id}\",\n          name: \"group_collection_id\",\n          type: \"checkbox\",\n          value: v.id,\n          className: \"group_collection\",\n          onChange: _this5.onToggle.bind(_this5),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"{v.id}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"\\xA0\", v.title));\n      });\n\n      if (localStorage.getItem('session')) {\n        return React.createElement(\"div\", {\n          className: \"bodyscroll\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar navbar-inverse navbar-static-top\",\n          role: \"navigation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"navbar-toggle\",\n          \"data-toggle\": \"collapse\",\n          \"data-target\": \".navbar-collapse\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"Toggle navigation\"), React.createElement(\"span\", {\n          className: \"icon-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"icon-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"icon-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"navbar-collapse collapse\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          className: \"nav navbar-nav navbar-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"home1\",\n          onClick: this.redirectDashboard,\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, \"Arodek\"))), React.createElement(\"ul\", {\n          className: \"nav navbar-nav navbar-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"active\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          onClick: this.redirectOrganization,\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"Admin\")), React.createElement(\"li\", {\n          className: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \"Edit Profile\")), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          \"data-confirm\": \"Are you sure you want to log out?\",\n          onClick: this.logout,\n          rel: \"nofollow\",\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \"Log Out\")))))), React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-xs-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"\",\n          onClick: this.redirectOrganization,\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"Admin\"), \" \\xBB \", React.createElement(\"a\", {\n          className: \"\",\n          onClick: function onClick() {\n            return _this5.redirectPlan(organizationid);\n          },\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"Plans\"), \" \\xBB \", React.createElement(\"a\", {\n          className: \"\",\n          \"data-original-title\": \"\",\n          title: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }), \" \\xBB New\")), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-xs-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, \"New Tab\"), React.createElement(\"form\", {\n          acceptCharset: \"UTF-8\",\n          onSubmit: this.chartSubmit.bind(this),\n          className: \"new_chart\",\n          id: \"new_chart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          name: \"utf8\",\n          type: \"hidden\",\n          value: \"\\u2713\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"authenticity_token\",\n          type: \"hidden\",\n          value: \"0qg+Ew1bfTQhYZVeILoFPOUpwulCQXei6e+JejzmK9M=\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"chart_title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, \"Title\"), \":\", React.createElement(\"input\", {\n          className: \"form-control\",\n          id: \"chart_title\",\n          name: \"chart_title\",\n          type: \"text\",\n          onChange: this.handleChangeName.bind(this, \"chart_title\"),\n          value: this.state.fields[\"chart_title\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"chart_priority\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, \"Priority\"), React.createElement(\"input\", {\n          className: \"form-control\",\n          id: \"chart_priority\",\n          name: \"chart_priority\",\n          type: \"text\",\n          onChange: this.handleChangeName.bind(this, \"chart_priority\"),\n          value: this.state.fields[\"chart_priority\"],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onChange: this.handleChangeLoggable.bind(this, 'chart_loggable'),\n          type: \"checkbox\",\n          value: this.state.fields[\"chart_loggable\"],\n          id: \"chart_loggable\",\n          name: \"chart_loggable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: \"chart_loggable\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, \"\\xA0Loggable\")), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"btn btn-success\",\n          name: \"commit\",\n          type: \"submit\",\n          value: \"Save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        })))))));\n      } else {\n        window.location.href = '/';\n      }\n    }\n  }]);\n\n  return AddEventAids;\n}(Component);\n\nexport default AddEventAids;","map":{"version":3,"sources":["/Users/TTN/merp_react_web_dev/src/admin/organization/collections/AddEventAids.js"],"names":["React","Component","Select","queryString","AddEventAids","props","state","chart_title","chart_priority","chart_loggable","ObjOrganizations","ObjCollections","items","fields","organization_template","collection_template","error","redirectOrganization","bind","redirectPlan","redirectDashboard","history","push","e","errors","formIsValid","query","URLSearchParams","location","search","organizationid","get","collectionid","chart_loggable_isChecked","document","getElementById","checked","session","localStorage","getItem","session_array","JSON","parse","userid","id","setState","preventDefault","handleValidation","console","log","createChartApi","alert","field","isChecked","target","value","fetch","global","api_url","method","headers","Accept","body","stringify","then","response","json","status","name","ObjCollection","details","window","reload","confirm","clear","href","GetOrganizationDetail","GetCollectionDetails","collectionList","map","v","onToggle","title","logout","chartSubmit","handleChangeName","handleChangeLoggable"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;IAGMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACbC,MAAAA,WAAW,EAAE,EADA;AAEnBC,MAAAA,cAAc,EAAE,CAFG;AAGbC,MAAAA,cAAc,EAAE,OAHH;AAIbC,MAAAA,gBAAgB,EAAE,EAJL;AAKbC,MAAAA,cAAc,EAAE,EALH;AAMnBC,MAAAA,KAAK,EAAE,EANY;AAObC,MAAAA,MAAM,EAAE,EAPK;AAQbC,MAAAA,qBAAqB,EAAE,EARV;AASbC,MAAAA,mBAAmB,EAAE,EATR;AAUbC,MAAAA,KAAK,EAAE;AAVM,KAAb;AAYA,UAAKC,oBAAL,GAA0B,MAAKA,oBAAL,CAA0BC,IAA1B,uDAA1B;AACN,UAAKC,YAAL,GAAkB,MAAKA,YAAL,CAAkBD,IAAlB,uDAAlB;AACA,UAAKE,iBAAL,GAAuB,MAAKA,iBAAL,CAAuBF,IAAvB,uDAAvB;AAhBoB;AAiBhB;;;;wCACe;AACnB,WAAKb,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AACC;;;iCACYC,C,EACV;AACF,WAAKlB,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,2CAA0CC,CAAlE;AACG;;;uCACiB;AACjB,UAAIV,MAAM,GAAG,KAAKP,KAAL,CAAWO,MAAxB;AACA,UAAIW,MAAM,GAAG,EAAb;AACA,UAAIC,WAAW,GAAG,IAAlB;AACA,UAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKtB,KAAL,CAAWuB,QAAX,CAAoBC,MAAxC,CAAd;AACA,UAAMC,cAAc,GAAGJ,KAAK,CAACK,GAAN,CAAU,cAAV,CAAvB;AACH,UAAMC,YAAY,GAAGN,KAAK,CAACK,GAAN,CAAU,cAAV,CAArB;AACA,UAAIE,wBAAwB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,OAAzE;AACA,UAAIC,OAAO,GAAEC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAb;AACG,UAAIC,aAAa,GAACC,IAAI,CAACC,KAAL,CAAWL,OAAX,CAAlB;AACH,UAAIM,MAAM,GAAGH,aAAa,CAACI,EAA3B,CAVoB,CAWlB;;AACA/B,MAAAA,MAAM,CAAC,QAAD,CAAN,GAAiB,aAAjB;AACAA,MAAAA,MAAM,CAAC,gBAAD,CAAN,GAAyBiB,cAAzB;AACHjB,MAAAA,MAAM,CAAC,cAAD,CAAN,GAAuBmB,YAAvB;AACAnB,MAAAA,MAAM,CAAC,gBAAD,CAAN,GAAyBoB,wBAAzB;AACApB,MAAAA,MAAM,CAAC,QAAD,CAAN,GAAiB8B,MAAjB,CAhBqB,CAiBjB;;AACA,UAAG,CAAC9B,MAAM,CAAC,aAAD,CAAV,EAA0B;AACvBY,QAAAA,WAAW,GAAG,KAAd;AACAD,QAAAA,MAAM,CAAC,aAAD,CAAN,GAAwB,iBAAxB;AACF;;AACF,WAAKqB,QAAL,CAAc;AAACrB,QAAAA,MAAM,EAAEA;AAAT,OAAd;AACA,aAAOC,WAAP;AACA;;;gCAEWF,C,EAAE;AACZA,MAAAA,CAAC,CAACuB,cAAF;;AACA,UAAG,KAAKC,gBAAL,EAAH,EAA2B;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3C,KAAL,CAAWO,MAAvB;AACI,aAAKqC,cAAL;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3C,KAAL,CAAWO,MAAvB;AACD,OAJD,MAIK;AACFsC,QAAAA,KAAK,CAAC,yBAAD,CAAL;AACF;AAEF;;;yCACoBC,K,EAAO7B,C,EAAE;AAC5B,UAAIV,MAAM,GAAG,KAAKP,KAAL,CAAWO,MAAxB;AACA,UAAIwC,SAAS,GAAG9B,CAAC,CAAC+B,MAAF,CAASlB,OAAzB;AACAvB,MAAAA,MAAM,CAACuC,KAAD,CAAN,GAAgBC,SAAhB;AACA,WAAKR,QAAL,CAAc;AAAChC,QAAAA,MAAM,EAANA;AAAD,OAAd;AACD;;;qCACgBuC,K,EAAO7B,C,EAAE;AACxB,UAAIV,MAAM,GAAG,KAAKP,KAAL,CAAWO,MAAxB;AACAA,MAAAA,MAAM,CAACuC,KAAD,CAAN,GAAgB7B,CAAC,CAAC+B,MAAF,CAASC,KAAzB;AACA,WAAKV,QAAL,CAAc;AAAChC,QAAAA,MAAM,EAANA;AAAD,OAAd;AACD;;;2CACqB;AACpB,WAAKR,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,eAAxB;AACC;;;4CACsB;AAAA;;AACvB,UAAIR,qBAAqB,GAAG,KAAKR,KAAL,CAAWQ,qBAAvC;AACA,UAAIJ,gBAAgB,GAAG,KAAKJ,KAAL,CAAWI,gBAAlC;AACAI,MAAAA,qBAAqB,CAAC,QAAD,CAArB,GAAgC,wBAAhC;AACA,UAAMY,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKtB,KAAL,CAAWuB,QAAX,CAAoBC,MAAxC,CAAd;AACA,UAAMC,cAAc,GAAGJ,KAAK,CAACK,GAAN,CAAU,cAAV,CAAvB;AACAjB,MAAAA,qBAAqB,CAAC,gBAAD,CAArB,GAAwCgB,cAAxC;AACA0B,MAAAA,KAAK,CAACC,MAAM,CAACC,OAAR,EACF;AACIC,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAFb;AAMIC,QAAAA,IAAI,EAAErB,IAAI,CAACsB,SAAL,CAAe,KAAKzD,KAAL,CAAWQ,qBAA1B;AANV,OADE,CAAL,CASKkD,IATL,CASU,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OATV,EAUKF,IAVL,CAUU,UAACC,QAAD,EAAc;AAClB,YAAME,MAAM,GAACF,QAAQ,CAACE,MAAtB;AACA,YAAMC,IAAI,GAAGH,QAAQ,CAACG,IAAtB;;AACD,YAAGD,MAAM,KAAK,MAAd,EACA;AACC,UAAA,MAAI,CAACtB,QAAL,CAAc;AACZnC,YAAAA,gBAAgB,EAAEuD,QAAQ,CAACG;AADf,WAAd;AAGA;AACN,OAnBA;AAqBD;;;2CAEiB;AAAA;;AACtB,UAAIrD,mBAAmB,GAAG,KAAKT,KAAL,CAAWS,mBAArC;AACA,UAAIsD,aAAa,GAAG,KAAK/D,KAAL,CAAW+D,aAA/B;AACAtD,MAAAA,mBAAmB,CAAC,QAAD,CAAnB,GAA8B,kBAA9B;AACA,UAAMW,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKtB,KAAL,CAAWuB,QAAX,CAAoBC,MAAxC,CAAd;AACA,UAAMC,cAAc,GAAGJ,KAAK,CAACK,GAAN,CAAU,cAAV,CAAvB;AACA,UAAMC,YAAY,GAAGN,KAAK,CAACK,GAAN,CAAU,cAAV,CAArB;AACAhB,MAAAA,mBAAmB,CAAC,gBAAD,CAAnB,GAAsCe,cAAtC;AACAf,MAAAA,mBAAmB,CAAC,cAAD,CAAnB,GAAoCiB,YAApC;AACAwB,MAAAA,KAAK,CAACC,MAAM,CAACC,OAAR,EACF;AACCC,QAAAA,MAAM,EAAE,MADT;AAECC,QAAAA,OAAO,EAAE;AACRC,UAAAA,MAAM,EAAE,kBADA;AAER,0BAAgB;AAFR,SAFV;AAMCC,QAAAA,IAAI,EAAErB,IAAI,CAACsB,SAAL,CAAe,KAAKzD,KAAL,CAAWS,mBAA1B;AANP,OADE,CAAL,CASEiD,IATF,CASO,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OATP,EAUEF,IAVF,CAUO,UAACC,QAAD,EAAc;AAClB,YAAME,MAAM,GAACF,QAAQ,CAACE,MAAtB;AACA,YAAMG,OAAO,GAAGL,QAAQ,CAACK,OAAzB;;AACD,YAAGH,MAAM,KAAK,MAAd,EACA;AACC,UAAA,MAAI,CAACtB,QAAL,CAAc;AACfwB,YAAAA,aAAa,EAAEC;AADA,WAAd;AAGA;AACF,OAnBD;AAoBCtB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKoB,aAAjB;AACI;;;qCAGD;AAAA;;AACE,UAAM3C,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKtB,KAAL,CAAWuB,QAAX,CAAoBC,MAAxC,CAAd;AACA,UAAMC,cAAc,GAAGJ,KAAK,CAACK,GAAN,CAAU,cAAV,CAAvB;AACH,UAAMC,YAAY,GAAGN,KAAK,CAACK,GAAN,CAAU,cAAV,CAArB;AACGyB,MAAAA,KAAK,CAACC,MAAM,CAACC,OAAR,EACL;AACIC,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAFb;AAMIC,QAAAA,IAAI,EAAErB,IAAI,CAACsB,SAAL,CAAe,KAAKzD,KAAL,CAAWO,MAA1B;AANV,OADK,CAAL,CASCmD,IATD,CASM,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OATN,EAUCF,IAVD,CAUM,UAACC,QAAD,EAAc;AAEf,YAAME,MAAM,GAACF,QAAQ,CAACE,MAAtB;;AACA,YAAGA,MAAM,KAAK,MAAd,EACA;AACN,UAAA,MAAI,CAAC9D,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,2CAAyCQ,cAAzC,GAAwD,gBAAxD,GAAyEE,YAAjG;;AACAuC,UAAAA,MAAM,CAAC3C,QAAP,CAAgB4C,MAAhB;AACO,SAJD,MAKI;AACDrB,UAAAA,KAAK,CAAC,wCAAD,CAAL;AACF;AACL,OArBD;AAsBD;;;6BAEQ;AACP,UAAIoB,MAAM,CAACE,OAAP,CAAe,mCAAf,CAAJ,EAAyD;AAC3DnC,QAAAA,YAAY,CAACoC,KAAb;AACAH,QAAAA,MAAM,CAAC3C,QAAP,CAAgB+C,IAAhB,GAAuB,GAAvB;AACC;AACF;;;wCACmB;AAClB,WAAKC,qBAAL;AACA,WAAKC,oBAAL;AACD;;;6BAEQ;AAAA;;AACV,UAAMnD,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKtB,KAAL,CAAWuB,QAAX,CAAoBC,MAAxC,CAAd;AACG,UAAMC,cAAc,GAAGJ,KAAK,CAACK,GAAN,CAAU,cAAV,CAAvB;AACA,UAAI+C,cAAc,GAAG,KAAKxE,KAAL,CAAWK,cAAX,CAA0BoE,GAA1B,CAA8B,UAAAC,CAAC;AAAA,eAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,EAAE,EAAC,QAAV;AACC,UAAA,IAAI,EAAC,qBADN;AAEC,UAAA,IAAI,EAAC,UAFN;AAGC,UAAA,KAAK,EAAEA,CAAC,CAACpC,EAHV;AAIC,UAAA,SAAS,EAAC,kBAJX;AAKL,UAAA,QAAQ,EAAE,MAAI,CAACqC,QAAL,CAAc/D,IAAd,CAAmB,MAAnB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAQE;AAAO,UAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA2B8D,CAAC,CAACE,KAA7B,CARF,CADgD;AAAA,OAA/B,CAArB;;AAYH,UAAI5C,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AAClC,eACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACJ;AAAK,UAAA,SAAS,EAAC,yCAAf;AAAyD,UAAA,IAAI,EAAC,YAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,eAAhC;AAAgD,yBAAY,UAA5D;AAAuE,yBAAY,kBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,EAIE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADF,CADF,EASE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAG,UAAA,SAAS,EAAC,OAAb;AAAqB,UAAA,OAAO,EAAE,KAAKnB,iBAAnC;AAAsD,iCAAoB,EAA1E;AAA6E,UAAA,KAAK,EAAC,EAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CADF,CADF,EAIE;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACM;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuB;AAAG,UAAA,OAAO,EAAE,KAAKH,oBAAjB;AAAuC,iCAAoB,EAA3D;AAA8D,UAAA,KAAK,EAAC,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAvB,CADN,EAEI;AAAI,UAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiB;AAAG,iCAAoB,EAAvB;AAA0B,UAAA,KAAK,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAjB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAG,0BAAa,mCAAhB;AAAoD,UAAA,OAAO,EAAG,KAAKkE,MAAnE;AAA2E,UAAA,GAAG,EAAC,UAA/E;AAA0F,iCAAoB,EAA9G;AAAiH,UAAA,KAAK,EAAC,EAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAJ,CAHJ,CAJF,CATF,CADA,CADI,EAwBF;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAG,UAAA,SAAS,EAAC,EAAb;AAAgB,UAAA,OAAO,EAAE,KAAKlE,oBAA9B;AAAqD,iCAAoB,EAAzE;AAA4E,UAAA,KAAK,EAAC,EAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,YACkG;AAAG,UAAA,SAAS,EAAC,EAAb;AAAgB,UAAA,OAAO,EAAE;AAAA,mBAAI,MAAI,CAACE,YAAL,CAAkBW,cAAlB,CAAJ;AAAA,WAAzB;AAAgE,iCAAoB,EAApF;AAAuF,UAAA,KAAK,EAAC,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADlG,YAC8M;AAAG,UAAA,SAAS,EAAC,EAAb;AAAgB,iCAAoB,EAApC;AAAuC,UAAA,KAAK,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD9M,cADF,CADF,EAME;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAGR;AAAM,UAAA,aAAa,EAAC,OAApB;AACA,UAAA,QAAQ,EAAG,KAAKsD,WAAL,CAAiBlE,IAAjB,CAAsB,IAAtB,CADX;AAEA,UAAA,SAAS,EAAC,WAFV;AAGA,UAAA,EAAE,EAAC,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,QAAxB;AAAiC,UAAA,KAAK,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC;AAAO,UAAA,IAAI,EAAC,oBAAZ;AAAiC,UAAA,IAAI,EAAC,QAAtC;AAA+C,UAAA,KAAK,EAAC,8CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,CAJE,EAQA;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,OAEI;AAAO,UAAA,SAAS,EAAC,cAAjB;AACD,UAAA,EAAE,EAAC,aADF;AAED,UAAA,IAAI,EAAC,aAFJ;AAGD,UAAA,IAAI,EAAC,MAHJ;AAID,UAAA,QAAQ,EAAE,KAAKmE,gBAAL,CAAsBnE,IAAtB,CAA2B,IAA3B,EAAiC,aAAjC,CAJT;AAKD,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWO,MAAX,CAAkB,aAAlB,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CARA,EAkBE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAO,UAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADG,EAEA;AAAO,UAAA,SAAS,EAAC,cAAjB;AACC,UAAA,EAAE,EAAC,gBADJ;AAEC,UAAA,IAAI,EAAC,gBAFN;AAGC,UAAA,IAAI,EAAC,MAHN;AAIC,UAAA,QAAQ,EAAE,KAAKwE,gBAAL,CAAsBnE,IAAtB,CAA2B,IAA3B,EAAiC,gBAAjC,CAJX;AAKC,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWO,MAAX,CAAkB,gBAAlB,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CAlBF,EA4BE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AACA,UAAA,QAAQ,EAAE,KAAKyE,oBAAL,CAA0BpE,IAA1B,CAA+B,IAA/B,EAAoC,gBAApC,CADV;AAEA,UAAA,IAAI,EAAC,UAFL;AAGA,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWO,MAAX,CAAkB,gBAAlB,CAHP;AAIA,UAAA,EAAE,EAAC,gBAJH;AAKA,UAAA,IAAI,EAAC,gBALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,EAOE;AAAO,UAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CA5BF,EAqCE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,SAAS,EAAC,iBAAjB;AAAmC,UAAA,IAAI,EAAC,QAAxC;AAAiD,UAAA,IAAI,EAAC,QAAtD;AAA+D,UAAA,KAAK,EAAC,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CArCF,CAHQ,CADF,CANF,CAxBE,CADJ;AAiFF,OAlFD,MAkFK;AACL0D,QAAAA,MAAM,CAAC3C,QAAP,CAAgB+C,IAAhB,GAAuB,GAAvB;AACC;AACC;;;;EAvRwB1E,S;;AAyR3B,eAAeG,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport queryString from 'query-string'\n\n\nclass AddEventAids extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n        chart_title: '',\n\t\tchart_priority: 0,\n        chart_loggable: 'false',\n        ObjOrganizations: [],\n        ObjCollections: [],\n\t\titems: [],\n        fields: {},\n        organization_template: {},\n        collection_template: {},\n        error: {}\n        }\n        this.redirectOrganization=this.redirectOrganization.bind(this);\n\t\tthis.redirectPlan=this.redirectPlan.bind(this);\n\t\tthis.redirectDashboard=this.redirectDashboard.bind(this);\n     }\n\t redirectDashboard(){\n\t this.props.history.push('/Collection');\n\t }\n\t redirectPlan(e)\n     {\n\t  this.props.history.push('/collections/Collections?organization='+ e);\n     }\n     handleValidation(){\n      let fields = this.state.fields;\n      let errors = {};\n      let formIsValid = true;\n      const query = new URLSearchParams(this.props.location.search);\n      const organizationid = query.get('organization');\n\t  const collectionid = query.get('collectionid');\n\t  let chart_loggable_isChecked = document.getElementById('chart_loggable').checked;\n\t  let session= localStorage.getItem(\"session\");\n      let session_array=JSON.parse(session);\n\t  let userid = session_array.id;\n     //action \n     fields[\"action\"]=\"createChart\";\n     fields[\"organizationid\"]=organizationid;\n\t fields[\"collectionid\"]=collectionid;\n\t fields[\"chart_loggable\"]=chart_loggable_isChecked;\n\t fields[\"userid\"]=userid;\n      //chart_title\n      if(!fields[\"chart_title\"]){\n         formIsValid = false;\n         errors[\"chart_title\"] = \"Cannot be empty\";\n      }\n     this.setState({errors: errors});\n     return formIsValid;\n    }\n    \n    chartSubmit(e){\n      e.preventDefault();\n      if(this.handleValidation()){\n\t\t  console.log(this.state.fields);\n        this.createChartApi();\n        console.log(this.state.fields);\n      }else{\n         alert(\"Mandatory Field Emplty!\");\n      }\n    \n    }\n    handleChangeLoggable(field, e){         \n      let fields = this.state.fields;\n      let isChecked = e.target.checked;\n      fields[field] = isChecked;     \n      this.setState({fields});\n    }\n    handleChangeName(field, e){         \n      let fields = this.state.fields;\n      fields[field] = e.target.value;        \n      this.setState({fields});\n    }\n    redirectOrganization(){\n      this.props.history.push('/Organization');\n      }\n      GetOrganizationDetail(){\n      let organization_template = this.state.organization_template;\n      let ObjOrganizations = this.state.ObjOrganizations;\n      organization_template[\"action\"]=\"getOrganizationDetails\"; \n      const query = new URLSearchParams(this.props.location.search);\n      const organizationid = query.get('organization');\n      organization_template[\"organizationid\"]=organizationid; \n      fetch(global.api_url,\n         {\n             method: 'POST',\n             headers: {\n                 Accept: 'application/json',\n                 'Content-Type': 'application/json'\n             },\n             body: JSON.stringify(this.state.organization_template)\n         })\n          .then((response) => response.json())\n          .then((response) => { \n            const status=response.status;\n            const name = response.name;\n           if(status === \"true\")\n           {\n            this.setState({\n              ObjOrganizations: response.name\n          })\n           }       \n     });\n     \n    }\n\nGetCollectionDetails(){\nlet collection_template = this.state.collection_template;\nlet ObjCollection = this.state.ObjCollection;\ncollection_template[\"action\"]=\"detailCollection\";\nconst query = new URLSearchParams(this.props.location.search);\nconst organizationid = query.get('organization');\nconst collectionid = query.get('collectionid');\ncollection_template[\"organizationid\"]=organizationid;\ncollection_template[\"collectionid\"]=collectionid;\nfetch(global.api_url,\n   {\n\t   method: 'POST',\n\t   headers: {\n\t\t   Accept: 'application/json',\n\t\t   'Content-Type': 'application/json'\n\t   },\n\t   body: JSON.stringify(this.state.collection_template)\n   })\n\t.then((response) => response.json())\n\t.then((response) => { \n\t  const status=response.status;\n\t  const details = response.details;\n\t if(status === \"true\")\n\t {\n\t  this.setState({\n\t\tObjCollection: details\n\t})\n\t }       \n});\n console.log(this.ObjCollection);       \n    }\n    \n    createChartApi()\n    {\n      const query = new URLSearchParams(this.props.location.search);\n      const organizationid = query.get('organization');\n\t  const collectionid = query.get('collectionid');\n      fetch(global.api_url,\n      {\n          method: 'POST',\n          headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'                 \n          },\n          body: JSON.stringify(this.state.fields)\n      })\n      .then((response) => response.json())\n      .then((response) => {\n\n           const status=response.status;\n           if(status === \"true\")\n           {\n\t\t\t  this.props.history.push('/EventAids?action=create&organization='+organizationid+'&collectionid='+collectionid);\n\t\t\t  window.location.reload();\n           }\n           else{\n              alert(\"Something went wrong, please try again\");\n           }\n      });\n    }\n\n    logout() {\n      if (window.confirm(\"Are you sure you want to log out?\")) {\n    localStorage.clear();\n    window.location.href = '/';\n    }\n  }\n  componentDidMount() {\n    this.GetOrganizationDetail();\n    this.GetCollectionDetails();\n  }\n\n  render() {\n\tconst query = new URLSearchParams(this.props.location.search);\n    const organizationid = query.get('organization');  \n    let collectionList = this.state.ObjCollections.map(v => (\n        <div>\n          <input id=\"{v.id}\"\n           name=\"group_collection_id\"\n           type=\"checkbox\"\n           value={v.id}\n           className=\"group_collection\"\n\t\t   onChange={this.onToggle.bind(this)}\n           />\n          <label for=\"{v.id}\">&nbsp;{v.title}</label>\n        </div>\n    ));\n\tif (localStorage.getItem('session')) {\n    return (\n        <div className=\"bodyscroll\">\n    <div className=\"navbar navbar-inverse navbar-static-top\" role=\"navigation\">\n    <div className=\"container\">\n      <div className=\"navbar-header\">\n        <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n        </button>\n      </div>\n      <div className=\"navbar-collapse collapse\">\n        <ul className=\"nav navbar-nav navbar-left\">\n          <li><a className=\"home1\" onClick={this.redirectDashboard} data-original-title=\"\" title=\"\">Arodek</a></li>\n        </ul>\n        <ul className=\"nav navbar-nav navbar-right\">\n              <li className=\"active\"><a onClick={this.redirectOrganization} data-original-title=\"\" title=\"\">Admin</a></li>\n            <li className=\"\"><a data-original-title=\"\" title=\"\">Edit Profile</a></li>\n            <li><a data-confirm=\"Are you sure you want to log out?\" onClick= {this.logout} rel=\"nofollow\" data-original-title=\"\" title=\"\">Log Out</a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  \n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n           <a className=\"\" onClick={this.redirectOrganization}  data-original-title=\"\" title=\"\">Admin</a> » <a className=\"\" onClick={()=>this.redirectPlan(organizationid)} data-original-title=\"\" title=\"\">Plans</a> » <a className=\"\" data-original-title=\"\" title=\"\"></a> » New\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-12\">\n          <h2>New Tab</h2>\n  \n  <form acceptCharset=\"UTF-8\"\n  onSubmit= {this.chartSubmit.bind(this)}\n  className=\"new_chart\"\n  id=\"new_chart\">\n<div>\n\t<input name=\"utf8\" type=\"hidden\" value=\"✓\"/>\n\t<input name=\"authenticity_token\" type=\"hidden\" value=\"0qg+Ew1bfTQhYZVeILoFPOUpwulCQXei6e+JejzmK9M=\"/>\n\t</div> \n  <div className=\"form-group\">\n      <label htmlFor=\"chart_title\">Title</label>:\n      <input className=\"form-control\"\n     id=\"chart_title\" \n     name=\"chart_title\" \n     type=\"text\" \n     onChange={this.handleChangeName.bind(this, \"chart_title\")}\n     value={this.state.fields[\"chart_title\"]}\n     />\n    </div>\n    <div className=\"form-group\">\n\t<label htmlFor=\"chart_priority\">Priority</label>\n    <input className=\"form-control\"\n     id=\"chart_priority\" \n     name=\"chart_priority\" \n     type=\"text\" \n     onChange={this.handleChangeName.bind(this, \"chart_priority\")}\n     value={this.state.fields[\"chart_priority\"]}\n     />\n    </div>\n    <div className=\"form-group\">\n    <input \n    onChange={this.handleChangeLoggable.bind(this,'chart_loggable')}\n    type=\"checkbox\"\n    value={this.state.fields[\"chart_loggable\"]}\n    id=\"chart_loggable\" \n    name=\"chart_loggable\" />\n      <label htmlFor=\"chart_loggable\">&nbsp;Loggable</label>\n    </div>\n    <div className=\"form-group\">\n      <input className=\"btn btn-success\" name=\"commit\" type=\"submit\" value=\"Save\"/>\n    </div>\n  </form>\n          </div>\n        </div>\n      </div>\n  </div>\n    );\n\t}else{\n\twindow.location.href = '/';\t\t\n\t}\n  }\n}\nexport default AddEventAids;"]},"metadata":{},"sourceType":"module"}