{"ast":null,"code":"import _classCallCheck from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/TTN/merp_react_web_dev/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/TTN/merp_react_web_dev/src/Profile.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, NavLink, Switch, Link, Route, HashRouter } from 'react-router-dom';\n\nvar Profile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profile, _Component);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Profile).call(this, props));\n    _this.state = {\n      email: null,\n      password: null,\n      newpassword: null,\n      confirmpassword: null,\n      userid: null,\n      organizationid: null\n    };\n    _this.GotoHome = _this.GotoHome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatepassword = _this.updatepassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var sessiondata = localStorage.getItem(\"session\");\n      var sdata = JSON.parse(sessiondata);\n      this.setState({\n        userid: sdata.id,\n        organizationid: sdata.organization_id,\n        email: sdata.email\n      });\n    }\n  }, {\n    key: \"updatepassword\",\n    value: function updatepassword(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n\n      if (this.state.email === null) {\n        alert(\"Please enter email\");\n      } else if (this.state.password === null) {\n        alert(\"Please enter Oldpassword\");\n      } else if (this.state.newpassword === null) {\n        alert(\"Please enter new password\");\n      } else if (this.state.newpassword.length < 8) {\n        alert(\"Please enter minimum is 8 characters\");\n      } else if (this.state.confirmpassword === null) {\n        alert(\"Please enter confirm password\");\n      } else if (this.state.confirmpassword.length < 8) {\n        alert(\"Please enter minimum is 8 characters\");\n      } else if (this.state.newpassword != this.state.confirmpassword) {\n        alert(\"Password confirmation doesn't match Password. Password is too short (minimum is 8 characters)\");\n      } else {\n        var data = {\n          \"action\": \"editProfile\",\n          \"userid\": this.state.userid,\n          \"organizationid\": this.state.organizationid,\n          \"user_email\": this.state.email,\n          \"current_password\": this.state.password,\n          \"new_password\": this.state.newpassword\n        };\n        console.log(data);\n        fetch(global.api_url, {\n          method: 'POST',\n          headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          _this2.GotoHome();\n\n          console.log(response);\n        });\n      }\n    }\n  }, {\n    key: \"handlenewpassword\",\n    value: function handlenewpassword(field, e) {\n      this.setState({\n        newpassword: e.target.value\n      });\n    }\n  }, {\n    key: \"handleconfirmpassword\",\n    value: function handleconfirmpassword(field, e) {\n      this.setState({\n        confirmpassword: e.target.value\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(field, e) {\n      if (field === \"email\") {\n        this.setState({\n          email: e.target.value\n        });\n      } else if (field === \"password\") {\n        this.setState({\n          password: e.target.value\n        });\n      }\n    }\n  }, {\n    key: \"GotoHome\",\n    value: function GotoHome() {\n      this.props.history.push('/Collection');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ember-view ember-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: this.GotoHome,\n        className: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"h\")), React.createElement(\"li\", {\n        className: \"back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"M\")), React.createElement(\"li\", {\n        className: \"titlebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Arodek\"), React.createElement(\"li\", {\n        onClick: this.GotoHome,\n        className: \"logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        \"data-ember-action\": \"1402\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"o\")))), React.createElement(\"div\", {\n        className: \"update-profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Update Profile\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Leave Password fields blank if you do not want to change your password.\"), React.createElement(\"form\", {\n        onSubmit: this.updatepassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleChange.bind(this, \"email\"),\n        value: this.state.email,\n        className: \"ember-view ember-text-field\",\n        placeholder: \"Email Address\",\n        autoCapitalize: \"off\",\n        autoCorrect: \"off\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.handleChange.bind(this, \"password\"),\n        value: this.state.password,\n        className: \"ember-view ember-text-field\",\n        placeholder: \"Current Password\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.handlenewpassword.bind(this, \"newpassword\"),\n        value: this.state.newpassword,\n        className: \"ember-view ember-text-field\",\n        placeholder: \"Password\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onChange: this.handleconfirmpassword.bind(this, \"confirmpassword\"),\n        value: this.state.confirmpassword,\n        className: \"ember-view ember-text-field\",\n        placeholder: \"Password Confirmation\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Update\"))));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport default Profile;","map":{"version":3,"sources":["/Users/TTN/merp_react_web_dev/src/Profile.js"],"names":["React","Component","BrowserRouter","Router","NavLink","Switch","Link","Route","HashRouter","Profile","props","state","email","password","newpassword","confirmpassword","userid","organizationid","GotoHome","bind","updatepassword","sessiondata","localStorage","getItem","sdata","JSON","parse","setState","id","organization_id","e","preventDefault","alert","length","data","console","log","fetch","global","api_url","method","headers","Accept","body","stringify","then","response","json","field","target","value","history","push","handleChange","handlenewpassword","handleconfirmpassword"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, NavLink, Switch, Link, Route ,HashRouter} from 'react-router-dom';\n\n\nclass Profile extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email:null,\n            password:null,\n            newpassword:null,\n            confirmpassword:null,\n            userid:null,\n            organizationid:null\n        }\n        this.GotoHome=this.GotoHome.bind(this);\n        this.updatepassword=this.updatepassword.bind(this);\n     }\n\n     componentDidMount(){\n\n        let sessiondata= localStorage.getItem(\"session\");\n        let sdata=JSON.parse(sessiondata);\n\n        this.setState({\n            userid: sdata.id,\n            organizationid:sdata.organization_id,\n            email:sdata.email\n        })\n     }\n\n     updatepassword(e){\n        e.preventDefault();\n\n        if(this.state.email === null){\n            alert(\"Please enter email\");      \n        }\n       else if(this.state.password === null){\n            alert(\"Please enter Oldpassword\");  \n        }\n        else if(this.state.newpassword === null ){\n            alert(\"Please enter new password\");   \n        }\n        else if(this.state.newpassword.length < 8 ){\n            alert(\"Please enter minimum is 8 characters\");   \n        }\n       \n        else if(this.state.confirmpassword === null){\n            alert(\"Please enter confirm password\");\n        }\n        else if(this.state.confirmpassword.length < 8 ){\n            alert(\"Please enter minimum is 8 characters\");   \n        }\n        else if(this.state.newpassword != this.state.confirmpassword){\n\n          alert(\"Password confirmation doesn't match Password. Password is too short (minimum is 8 characters)\")\n        }\n        else{\n            \n            var data={\n                \"action\": \"editProfile\",\n                \"userid\":this.state.userid,\n                \"organizationid\": this.state.organizationid,\n                \"user_email\": this.state.email,\n                \"current_password\": this.state.password,\n                \"new_password\": this.state.newpassword     \n                }\n\n           console.log(data);\n\n            fetch(global.api_url,\n                {\n                    method: 'POST',\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body:JSON.stringify(data)\n                    \n                })\n\n                 .then((response) => response.json())\n                 .then((response) => { \n\n                    this.GotoHome();\n\n                console.log(response);\n                 })\n        }\n     }\n\n\n     handlenewpassword(field, e){\n\n        this.setState({\n            newpassword:e.target.value\n        })\n     }\n     handleconfirmpassword(field, e){\n        this.setState({\n            confirmpassword:e.target.value\n            })\n            }\n     handleChange(field, e){         \n\n            if(field === \"email\"){\n                this.setState({\n                email:e.target.value\n            })\n            \n           \n            }\n           else if(field === \"password\"){\n                    this.setState({\n                        password:e.target.value\n                    })\n            }\n          \n         \n      }\n\n     GotoHome(){\n        this.props.history.push('/Collection');\n    \n      }\n\n     render(){\n         return(\n            <div  className=\"ember-view ember-app\">\n            <div className=\"menu\">\n                <ul>\n                  <li onClick= {this.GotoHome} className=\"home\"><a>h</a></li>\n                  <li className=\"back\"><a>M</a></li>\n                  <li className=\"titlebar\">Arodek</li>\n                  <li onClick= {this.GotoHome} className=\"logout\"><a data-ember-action=\"1402\">o</a></li>\n                </ul>\n              </div>\n              <div className=\"update-profile\">\n                <h2>Update Profile</h2>\n                <p>Leave Password fields blank if you do not want to change your password.</p>\n                <form onSubmit= {this.updatepassword}>\n                  <input \n                  onChange={this.handleChange.bind(this,\"email\")} \n                  value={this.state.email}\n                  className=\"ember-view ember-text-field\" \n                  placeholder=\"Email Address\" \n                  autoCapitalize=\"off\" \n                  autoCorrect=\"off\"\n                  type=\"text\"\n                  />\n\n                  <input \n                  onChange={this.handleChange.bind(this, \"password\")}\n                  value={this.state.password}\n                  className=\"ember-view ember-text-field\" \n                  placeholder=\"Current Password\" \n                  type=\"password\"\n                  />\n                  <input \n                  \n                  onChange={this.handlenewpassword.bind(this, \"newpassword\")}\n                  value={this.state.newpassword}\n                  className=\"ember-view ember-text-field\" \n                  placeholder=\"Password\" \n                  type=\"password\"/>\n                  <input \n                 \n                  onChange={this.handleconfirmpassword.bind(this, \"confirmpassword\")} \n                  value={this.state.confirmpassword}\n                  className=\"ember-view ember-text-field\" \n                  placeholder=\"Password Confirmation\" \n                  type=\"password\"/>\n                  <button >Update</button>\n                </form>\n              </div>\n              \n              </div>\n         );\n     }\n    }\n    export default Profile;"]},"metadata":{},"sourceType":"module"}