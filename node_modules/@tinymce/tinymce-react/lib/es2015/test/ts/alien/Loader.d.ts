import { Chain } from '@ephox/agar';
import * as React from 'react';
import { Editor, IAllProps } from '../../../main/ts/components/Editor';
import 'tinymce/tinymce';
export interface Payload {
    DOMNode: Element;
    editor: any;
    ref: React.RefObject<Editor>;
    root: HTMLElement;
}
declare type TestEditor = (props: IAllProps) => JSX.Element;
declare const cSetup: (createElement: (Ed: TestEditor) => JSX.Element) => Chain<Payload, Payload>;
declare const cRemove: Chain<Payload, Payload>;
declare const cNamedChainDirect: (name: "ref" | "DOMNode" | "editor" | "root") => Chain<Record<string, any>, Record<string, any>>;
declare const cDOMNode: (chain: Chain<any, any>) => Chain<{}, any>;
declare const cEditor: (chain: Chain<any, any>) => Chain<{}, any>;
export { cSetup, cRemove, cNamedChainDirect, cDOMNode, cEditor };
